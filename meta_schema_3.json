{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Theory Meta-Schema v3: Best of Both Worlds",
  "description": "Combines formal structure with flexibility and indigenous concept preservation",
  "type": "object",
  "patternProperties": {
    "^[a-zA-Z0-9_-]+$": {
      "$ref": "#/definitions/theoryObject"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "theoryObject": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/metadata"
        },
        "schema": {
          "$ref": "#/definitions/coreSchema"
        }
      },
      "required": ["metadata", "schema"]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "citation": {
          "type": "string",
          "description": "Full bibliographic citation"
        },
        "annotation": {
          "type": "string",
          "description": "1-3 sentence summary"
        },
        "model_type": {
          "type": "string",
          "enum": ["property_graph", "hypergraph", "tree", "sequence", "timeline", "table_matrix", "network", "other"],
          "description": "The primary data structure type"
        },
        "theory_characteristics": {
          "type": "object",
          "properties": {
            "formality": {
              "type": "string",
              "enum": ["formal", "semi-formal", "informal", "empirical"]
            },
            "has_process": {
              "type": "boolean",
              "description": "Whether the theory describes processes or workflows"
            },
            "has_axioms": {
              "type": "boolean",
              "description": "Whether the theory has formal rules or axioms"
            },
            "has_metrics": {
              "type": "boolean",
              "description": "Whether the theory defines success metrics"
            }
          }
        }
      },
      "required": ["citation", "annotation", "model_type"]
    },
    "coreSchema": {
      "type": "object",
      "properties": {
        "Ontology": {
          "$ref": "#/definitions/ontology",
          "description": "Required: The fundamental elements and relationships"
        },
        "Axioms": {
          "$ref": "#/definitions/axioms",
          "description": "Optional: Principles and formal rules"
        },
        "Analytics": {
          "$ref": "#/definitions/analytics",
          "description": "Optional: What to analyze and how"
        },
        "Process": {
          "$ref": "#/definitions/process",
          "description": "Optional: Workflows or procedures"
        },
        "Telos": {
          "$ref": "#/definitions/telos",
          "description": "Optional: Goals and success criteria"
        }
      },
      "required": ["Ontology"]
    },
    "ontology": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ontologyTerm"
          },
          "description": "The fundamental units/nodes/elements"
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ontologyTerm"
          },
          "description": "How entities relate to each other"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/propertyDefinition"
          },
          "description": "Attributes that can be attached to entities or connections"
        },
        "modifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modifierDefinition"
          },
          "description": "Qualifiers that condition or contextualize"
        }
      },
      "required": ["entities"]
    },
    "ontologyTerm": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Standardized name for cross-theory comparison"
        },
        "indigenous_term": {
          "type": "string",
          "description": "The exact term used in the source paper"
        },
        "description": {
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Examples from the paper"
        },
        "subTypeOf": {
          "type": "string",
          "description": "Parent type if hierarchical"
        },
        "properties": {
          "type": "object",
          "description": "Type-specific properties"
        },
        "notation": {
          "type": "object",
          "description": "Special symbols or notation used",
          "properties": {
            "symbol": {"type": "string"},
            "latex": {"type": "string"},
            "usage": {"type": "string"}
          }
        },
        "domain": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valid source types for connections"
        },
        "range": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Valid target types for connections"
        }
      },
      "required": ["indigenous_term", "description"]
    },
    "propertyDefinition": {
      "type": "object",
      "properties": {
        "name": {"type": "string"},
        "indigenous_term": {"type": "string"},
        "description": {"type": "string"},
        "type": {
          "type": "string",
          "enum": ["numeric", "categorical", "boolean", "string", "complex"]
        },
        "applies_to": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Which entities/connections this property applies to"
        },
        "computation": {
          "type": "string",
          "description": "How to calculate if derived"
        }
      },
      "required": ["indigenous_term", "description"]
    },
    "modifierDefinition": {
      "type": "object",
      "properties": {
        "name": {"type": "string"},
        "indigenous_term": {"type": "string"},
        "description": {"type": "string"},
        "category": {
          "type": "string",
          "enum": ["temporal", "modal", "truth_value", "certainty", "other"]
        },
        "values": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Possible values"
        }
      },
      "required": ["indigenous_term", "description"]
    },
    "axioms": {
      "type": "object",
      "properties": {
        "principles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "statement": {"type": "string"},
              "formalization": {"type": "string"},
              "indigenous_notation": {"type": "string"}
            },
            "required": ["statement"]
          }
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "indigenous_notation": {"type": "string"},
              "if": {"type": "string"},
              "then": {"type": "string"},
              "formal_representation": {"type": "object"}
            }
          }
        },
        "constraints": {
          "type": "array",
          "items": {"type": "string"}
        }
      }
    },
    "analytics": {
      "type": "object",
      "properties": {
        "focal_concepts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "concept": {"type": "string"},
              "why_important": {"type": "string"},
              "how_identified": {"type": "string"}
            }
          }
        },
        "analytical_primitives": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Basic analytical operations"
        },
        "triggers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "condition": {"type": "string"},
              "action": {"type": "string"}
            }
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {"type": "string"},
              "indigenous_term": {"type": "string"},
              "formula": {"type": "string"},
              "interpretation": {"type": "string"}
            }
          }
        }
      }
    },
    "process": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": ["workflow", "sequential", "parallel", "iterative", "none"]
        },
        "description": {"type": "string"}
      },
      "required": ["mode"],
      "allOf": [
        {
          "if": {"properties": {"mode": {"const": "workflow"}}},
          "then": {
            "properties": {
              "entry_point": {"type": "string"},
              "nodes": {"type": "object"},
              "edges": {"type": "array"}
            },
            "required": ["entry_point", "nodes", "edges"]
          }
        },
        {
          "if": {"properties": {"mode": {"const": "sequential"}}},
          "then": {
            "properties": {
              "steps": {"type": "array"}
            },
            "required": ["steps"]
          }
        },
        {
          "if": {"properties": {"mode": {"const": "parallel"}}},
          "then": {
            "properties": {
              "lenses": {"type": "array"}
            },
            "required": ["lenses"]
          }
        }
      ]
    },
    "telos": {
      "type": "object",
      "properties": {
        "purpose": {
          "type": "string",
          "description": "What the theory aims to achieve"
        },
        "output_format": {
          "type": "object",
          "description": "Expected structure of results"
        },
        "success_criteria": {
          "type": "array",
          "items": {"type": "string"}
        },
        "applications": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Example use cases"
        }
      }
    }
  }
}