{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Computational Social Science Theory Meta-Schema (Synthesized Version)",
    "description": "The definitive, synthesized meta-schema incorporating the strengths of all previous versions. It is architecturally clean, high-fidelity, and semantically precise.",
    "type": "object",
    "patternProperties": {
      "^[a-zA-Z0-9_-]+$": {
        "$ref": "#/definitions/theoryObject"
      }
    },
    "additionalProperties": false,
    "definitions": {
      "theoryObject": {
        "type": "object",
        "properties": {
          "metadata": { "$ref": "#/definitions/metadata" },
          "schema": { "$ref": "#/definitions/coreSchema" },
          "schema_overrides": { "$ref": "#/definitions/coreSchema" }
        },
        "required": ["metadata"],
        "if": { "properties": { "metadata": { "required": ["extends"] } } },
        "then": {
          "required": ["schema_overrides"],
          "properties": { "schema": { "type": "null" } }
        },
        "else": {
          "required": ["schema"],
          "properties": { "schema_overrides": { "type": "null" } }
        }
      },
      "metadata": {
        "type": "object",
        "properties": {
          "citation": { "type": "string" },
          "annotation": { "type": "string" },
          "extends": { "type": "string" }
        },
        "required": ["citation", "annotation"]
      },
      "coreSchema": {
        "type": "object",
        "properties": {
          "components": {
            "type": "object",
            "patternProperties": { "^[a-zA-Z0-9_-]+$": { "$ref": "#/definitions/process" } },
            "additionalProperties": false
          },
          "Ontology": { "$ref": "#/definitions/ontology" },
          "Axioms": { "$ref": "#/definitions/axioms" },
          "Analytics": { "$ref": "#/definitions/analytics" },
          "Process": { "$ref": "#/definitions/process" },
          "Telos": { "$ref": "#/definitions/telos" }
        },
        "required": ["Ontology"]
      },
      "ontology": {
        "type": "object",
        "properties": {
          "entities": { "type": "array", "items": { "$ref": "#/definitions/termDefinition" } },
          "connections": { "type": "array", "items": { "$ref": "#/definitions/termDefinition" } },
          "modifiers": { "type": "array", "items": { "$ref": "#/definitions/modifierDefinition" } },
          "properties": { "type": "array", "items": { "$ref": "#/definitions/propertyDefinition" } }
        },
        "required": ["entities"]
      },
      "termDefinition": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "indigenous_term": { "type": "string" },
          "description": { "type": "string" },
          "notation": { "$ref": "#/definitions/notationDefinition" },
          "examples": { "type": "array", "items": { "type": "string" } },
          "subTypeOf": { "type": "string" },
          "properties": { "type": "object" },
          "domain": { "type": "array", "items": { "type": "string" } },
          "range": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["name", "description"]
      },
      "propertyDefinition": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "indigenous_term": { "type": "string" },
          "description": { "type": "string" },
          "type": { "type": "string", "enum": ["numeric", "categorical", "boolean", "string", "complex", "derived"] },
          "values": { "type": "array", "items": { "type": "string" } }
        },
        "required": ["name", "description", "type"]
      },
      "modifierDefinition": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "indigenous_term": { "type": "string" },
          "description": { "type": "string" },
          "category": { "type": "string", "enum": ["temporal", "modal", "truth_value", "certainty", "normative", "other"] }
        },
        "required": ["name", "description", "category"]
      },
      "notationDefinition": {
        "type": "object",
        "properties": {
          "symbol": { "type": "string" },
          "latex": { "type": "string" },
          "unicode": { "type": "string" },
          "usage_example": { "type": "string" }
        },
        "required": ["symbol"]
      },
      "axioms": {
        "type": "object",
        "properties": {
          "principles": {
            "type": "array",
            "items": { "type": "string" }
          },
          "rules": {
            "type": "array",
            "items": { "type": "object" }
          },
          "domain_of_applicability": { "type": "string" }
        },
        "required": ["principles"]
      },
      "analytics": {
        "type": "object",
        "properties": {
          "analytical_primitives": { "type": "array", "items": { "type": "string" } },
          "focal_concepts": { "type": "array", "items": { "type": "string" } },
          "metrics": { "type": "array", "items": { "type": "string" } },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": { "name": { "type": "string" }, "condition": { "type": "string" } },
              "required": ["name", "condition"]
            }
          }
        },
        "required": ["analytical_primitives"]
      },
      "process": {
        "type": "object",
        "properties": {
          "mode": { "type": "string", "enum": ["workflow", "sequential", "parallel", "iterative"] }
        },
        "required": ["mode"],
        "oneOf": [
          { "$ref": "#/definitions/workflowProcess" },
          { "$ref": "#/definitions/sequentialProcess" },
          { "$ref": "#/definitions/parallelProcess" },
          { "$ref": "#/definitions/iterativeProcess" }
        ]
      },
      "workflowProcess": {
        "properties": {
          "mode": { "const": "workflow" },
          "entry_point": { "type": "string" },
          "nodes": {
            "type": "object",
            "patternProperties": { "^[a-zA-Z0-9_-]+$": { "type": "object", "properties": { "action": { "type": "string" }, "description": { "type": "string" } }, "required": ["action"] } }
          },
          "edges": {
            "type": "array",
            "items": { "type": "object", "properties": { "source": { "type": "string" }, "target": { "type": "string" }, "condition": { "type": "string" } }, "required": ["source", "target"] }
          }
        },
        "required": ["entry_point", "nodes", "edges"]
      },
      "sequentialProcess": {
        "properties": {
          "mode": { "const": "sequential" },
          "steps": {
            "type": "array",
            "items": { "type": "object", "properties": { "stage_name": { "type": "string" }, "objective": { "type": "string" }, "completion_criteria": { "type": "string" } }, "required": ["stage_name", "objective", "completion_criteria"] }
          }
        },
        "required": ["steps"]
      },
      "parallelProcess": {
        "properties": {
          "mode": { "const": "parallel" },
          "lenses": {
            "type": "array",
            "items": { "type": "object", "properties": { "name": { "type": "string" }, "instruction": { "type": "string" } }, "required": ["name", "instruction"] }
          }
        },
        "required": ["lenses"]
      },
      "iterativeProcess": {
        "properties": {
          "mode": { "const": "iterative" },
          "initialization": { "type": "string" },
          "iteration_step": { "type": "string" },
          "convergence_criteria": { "type": "string" }
        },
        "required": ["initialization", "iteration_step", "convergence_criteria"]
      },
      "telos": {
        "type": "object",
        "properties": {
          "output_format": { "type": "object" },
          "success_criteria": { "type": "string" }
        },
        "required": ["output_format", "success_criteria"]
      }
    }
  }
  