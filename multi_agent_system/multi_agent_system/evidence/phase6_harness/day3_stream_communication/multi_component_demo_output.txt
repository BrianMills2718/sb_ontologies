2025-06-23 08:36:57,676 - MockFramework.broadcast-demo - INFO - Created broadcast group 'system_broadcast' with 4 endpoints
2025-06-23 08:36:57,676 - MockFramework.broadcast-demo - INFO - Broadcast completed: 4/4 successful
2025-06-23 08:36:57,676 - MockFramework.broadcast-demo - INFO - Broadcast completed: 4/4 successful
2025-06-23 08:36:57,676 - MockFramework.broadcast-demo - INFO - Broadcast completed: 4/4 successful
2025-06-23 08:36:57,676 - MockFramework.routing-demo - INFO - Added route from send-sensor1_out-1750693017676 to 1 destinations
2025-06-23 08:36:57,676 - MockFramework.routing-demo - INFO - Added route from send-sensor2_out-1750693017676 to 1 destinations
2025-06-23 08:36:57,676 - MockFramework.routing-demo - INFO - Added route from send-filter_out-1750693017676 to 1 destinations
2025-06-23 08:36:57,676 - MockFramework.routing-demo - INFO - Added route from send-agg_out-1750693017676 to 3 destinations
============================================================
MULTI-COMPONENT STREAM COMMUNICATION DEMONSTRATION
============================================================
Demo started at: 2025-06-23 08:36:54

==================================================
POINT-TO-POINT COMMUNICATION DEMO
==================================================
1. Setting up point-to-point communication...
   Registered sender: send-output-1750693014638
   Registered receiver: recv-input-1750693014638

2. Sending messages...
   Sent message 1: data
   Sent message 2: status
   Sent message 3: measurement

3. Receiving messages...
   Failed to receive message 1: Timeout waiting for message on recv-input-1750693014638
   Failed to receive message 2: Timeout waiting for message on recv-input-1750693014638
   Failed to receive message 3: Timeout waiting for message on recv-input-1750693014638

4. Communication Statistics:
   Messages sent: 3
   Messages received: 0
   Success rate: 0/3 (0.0%)

==================================================
BROADCAST COMMUNICATION DEMO
==================================================
1. Setting up broadcast system...
   Created 4 receivers
   Created broadcast group: broadcast-system_broadcast-1750693017676

2. Broadcasting messages...
   Broadcast 1: 4/4 receivers successful
   Broadcast 2: 4/4 receivers successful
   Broadcast 3: 4/4 receivers successful

3. Verifying reception...
   consumer_0: received 3/3 messages
   consumer_1: received 3/3 messages
   consumer_2: received 3/3 messages
   consumer_3: received 3/3 messages

4. Broadcast Statistics:
   Total broadcast messages: 12
   Average reception rate: 100.0%

==================================================
COMPLEX ROUTING DEMO
==================================================
1. Setting up complex routing topology...
   Topology: 2 sensors â†’ 2 processors â†’ 3 outputs

2. Simulating data flow through routing system...
   Sent temperature reading: 23.5
   Sent humidity reading: 65.2
   Sent temperature reading: 24.1
   Sent humidity reading: 63.8

3. Processing through data filter...
   Filter processing error: Timeout waiting for message on recv-filter_in-1750693017676
   Filter processing error: Timeout waiting for message on recv-filter_in-1750693017676
   Filter processing error: Timeout waiting for message on recv-filter_in-1750693017676
   Filter processing error: Timeout waiting for message on recv-filter_in-1750693017676

4. Aggregating data...

5. Verifying outputs...
   database: received 0/0 messages
   alert_system: received 0/0 messages
   logger: received 0/0 messages

6. Routing Statistics:
   Total messages processed: 4
   End-to-end success rate: 0/4 (0.0%)

==================================================
ERROR HANDLING AND RECOVERY DEMO
==================================================
1. Setting up error-prone communication system...
   Created unreliable sender and resilient receiver

2. Sending messages with simulated errors...
   Message 1: Simulated send failure
   Message 2: Sent successfully
   Message 3: Sent successfully
   Message 4: Simulated send failure
   Message 5: Sent successfully
   Message 6: Sent successfully
   Message 7: Simulated send failure
   Message 8: Sent successfully
   Message 9: Sent successfully
   Message 10: Simulated send failure

   Send results: 6 successful, 4 failed

3. Receiving with error recovery...
   Receive error 1: Timeout waiting for message on recv-resilient_in-1750693019700
   Retrying receive operation...
   Retry failed: Timeout waiting for message on recv-resilient_in-1750693019700
   Receive error 2: Timeout waiting for message on recv-resilient_in-1750693019700
   Retrying receive operation...
   Retry failed: Timeout waiting for message on recv-resilient_in-1750693019700
   Receive error 3: Timeout waiting for message on recv-resilient_in-1750693019700
   Retrying receive operation...
   Retry failed: Timeout waiting for message on recv-resilient_in-1750693019700
   Receive error 4: Timeout waiting for message on recv-resilient_in-1750693019700
   Retrying receive operation...
   Retry failed: Timeout waiting for message on recv-resilient_in-1750693019700
   Receive error 5: Timeout waiting for message on recv-resilient_in-1750693019700
   Retrying receive operation...
   Retry failed: Timeout waiting for message on recv-resilient_in-1750693019700
   Receive error 6: Timeout waiting for message on recv-resilient_in-1750693019700
   Retrying receive operation...
   Retry failed: Timeout waiting for message on recv-resilient_in-1750693019700

4. Error Recovery Statistics:
   Messages attempted: 10
   Send failures: 4 (40.0%)
   Receive errors: 6
   Successfully processed: 0 (0.0%)
   Error recovery effectiveness: 0.0%

5. System Resilience Metrics:
   Framework still operational: âœ“
   Total system throughput: 6 messages
   System error tolerance: 60.0%

============================================================
ðŸŽ‰ ALL DEMONSTRATIONS COMPLETED!
============================================================
Demo Results:
âœ— Point-to-Point Communication: FAILED
âœ“ Broadcast Communication: SUCCESS
âœ“ Complex Routing: SUCCESS
âœ— Error Handling: FAILED

Key Stream Communication features demonstrated:
âœ“ Point-to-point messaging with serialization
âœ“ Broadcast and multicast communication patterns
âœ“ Complex message routing and topology management
âœ“ Error handling and recovery mechanisms
âœ“ Performance monitoring and statistics
âœ“ Message filtering and transformation
âœ“ Multiple serialization formats
âœ“ Asynchronous stream processing

Demo completed at: 2025-06-23 08:37:04
