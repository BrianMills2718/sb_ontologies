{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Computational Social Science Theory Meta-Schema v8.0 (Agent-Optimized)",
    "description": "The optimal meta-schema for an agent-driven analysis framework. It features a rich core for theoretical nuance, a goal-oriented Telos for query matching, and a mission-critical Classification block that serves as a dispatch key for automated strategy selection and reasoning engine dispatch.",
    "type": "object",
    "patternProperties": {
      "^[a-zA-Z0-9_-]+$": {
        "$ref": "#/definitions/theoryObject"
      }
    },
    "additionalProperties": false,
    "definitions": {
      "theoryObject": {
        "type": "object",
        "properties": {
          "metadata": { "$ref": "#/definitions/metadata" },
          "classification": { "$ref": "#/definitions/classification" },
          "schema": { "$ref": "#/definitions/coreSchema" },
          "schema_overrides": { "$ref": "#/definitions/coreSchema" }
        },
        "required": ["metadata"],
        "if": { "properties": { "metadata": { "required": ["extends"] } } },
        "then": {
          "required": ["schema_overrides"],
          "properties": { "schema": { "type": "null" } }
        },
        "else": {
          "required": ["schema"],
          "properties": { "schema_overrides": { "type": "null" } }
        }
      },
      "metadata": {
        "type": "object",
        "properties": {
          "citation": {
            "type": "string",
            "description": "The full bibliographic citation for the source document."
          },
          "annotation": {
            "type": "string",
            "description": "A 1-3 sentence summary of the theory."
          },
          "extends": {
            "type": "string",
            "description": "The key name of another theory in the same file that this theory modifies."
          }
        },
        "required": ["citation", "annotation"]
      },
      "classification": {
        "type": "object",
        "description": "A non-authoritative, pre-inferred summary of the theory's structure for discoverability and, critically, for the Agent Orchestrator's strategy selection and dispatch. This block is the primary interface for the Reasoning Engine Registry.",
        "properties": {
          "model_type": {
            "type": "string",
            "enum": ["Graph", "Hypergraph", "Tree", "Sequence", "Table", "Grid", "Hybrid", "Other"],
            "description": "The primary structural data model required to instantiate and analyze this theory."
          },
          "reasoning_engine": {
            "type": "string",
            "enum": ["Graph_Engine", "Iterative_Table_Engine", "Statistical_Engine", "Temporal_Engine", "Hybrid_Engine"],
            "description": "The specific reasoning engine required to execute the operators compatible with this model type."
          },
          "compatible_operators": {
            "type": "array",
            "items": {"type": "string"},
            "description": "A list of specific retrieval or transformation operators that are primarily associated with this theory's structure."
          },
          "summary": {
            "type": "string",
            "description": "A brief natural language description of the theory's structure, e.g., 'Represents causal relationships as a directed acyclic graph.'"
          }
        },
        "required": ["model_type", "reasoning_engine"]
      },
      "coreSchema": {
        "type": "object",
        "properties": {
          "components": {
            "type": "object",
            "description": "A library of reusable, named Process blocks.",
            "patternProperties": {
              "^[a-zA-Z0-9_-]+$": { "$ref": "#/definitions/process" }
            },
            "additionalProperties": false
          },
          "Ontology": { "$ref": "#/definitions/ontology" },
          "Axioms": { "$ref": "#/definitions/axioms" },
          "Analytics": { "$ref": "#/definitions/analytics" },
          "Process": { "$ref": "#/definitions/process" },
          "Telos": { "$ref": "#/definitions/telos" }
        },
        "required": ["Ontology", "Telos"]
      },
      "ontology": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": { "$ref": "#/definitions/termDefinition" },
            "description": "The fundamental units or nodes in the theory."
          },
          "connections": {
            "type": "array",
            "items": { "$ref": "#/definitions/termDefinition" },
            "description": "How entities relate to each other."
          },
          "modifiers": {
            "type": "array",
            "items": { "$ref": "#/definitions/modifierDefinition" },
            "description": "Qualifiers that condition or contextualize."
          },
          "properties": {
            "type": "array",
            "items": { "$ref": "#/definitions/propertyDefinition" },
            "description": "Attributes that can be attached to entities or connections."
          }
        },
        "required": ["entities"]
      },
      "termDefinition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "A standardized name for cross-theory comparison (optional)."
          },
          "indigenous_term": {
            "type": "string",
            "description": "The exact term used by the author in the source document."
          },
          "description": { "type": "string" },
          "notation": { "$ref": "#/definitions/notationDefinition" },
          "examples": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Verbatim examples from the source text."
          },
          "subTypeOf": { "type": "string" },
          "properties": { "type": "object" },
          "domain": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Valid source types for connections."
          },
          "range": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Valid target types for connections."
          }
        },
        "required": ["indigenous_term", "description"]
      },
      "propertyDefinition": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "indigenous_term": {
            "type": "string",
            "description": "The exact term used in the source document."
          },
          "description": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["numeric", "categorical", "boolean", "string", "complex", "derived"]
          },
          "values": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Possible values for categorical properties."
          },
          "applies_to": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Which entities or connections this property can be attached to."
          },
          "computation": {
            "type": "string",
            "description": "Formula or method for calculating derived properties."
          }
        },
        "required": ["indigenous_term", "description", "type"]
      },
      "modifierDefinition": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "indigenous_term": {
            "type": "string",
            "description": "The exact term used in the source document."
          },
          "description": { "type": "string" },
          "category": {
            "type": "string",
            "enum": ["temporal", "modal", "truth_value", "certainty", "normative", "other"]
          },
          "values": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Possible values this modifier can take."
          },
          "applies_to": {
            "type": "array",
            "items": { "type": "string" },
            "description": "What this modifier can qualify (entities, connections, properties)."
          }
        },
        "required": ["indigenous_term", "description", "category"]
      },
      "notationDefinition": {
        "type": "object",
        "properties": {
          "symbol": { "type": "string" },
          "latex": { "type": "string" },
          "unicode": { "type": "string" },
          "usage_example": { "type": "string" }
        },
        "required": ["symbol"]
      },
      "axioms": {
        "type": "object",
        "properties": {
          "principles": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Broad, philosophical assumptions in natural language."
          },
          "rules": {
            "type": "array",
            "items": { "type": "object" },
            "description": "Formal, structured axioms or logical rules."
          },
          "domain_of_applicability": { "type": "string" }
        }
      },
      "analytics": {
        "type": "object",
        "properties": {
          "analytical_primitives": {
            "type": "array",
            "items": { "type": "string" }
          },
          "focal_concepts": {
            "type": "array",
            "items": { "type": "string" }
          },
          "metrics": {
            "type": "array",
            "items": { "$ref": "#/definitions/metricDefinition" },
            "description": "Quantitative or qualitative measures defined by the theory."
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "condition": { "type": "string" }
              },
              "required": ["name", "condition"]
            }
          }
        }
      },
      "metricDefinition": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "indigenous_term": {
            "type": "string",
            "description": "The exact term used in the source document."
          },
          "description": { "type": "string" },
          "formula": {
            "type": "string",
            "description": "Mathematical formula or calculation method."
          },
          "interpretation": {
            "type": "string",
            "description": "How to interpret the metric's values."
          },
          "range": {
            "type": "string",
            "description": "Expected or valid value range."
          }
        },
        "required": ["indigenous_term", "description"]
      },
      "process": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string",
            "enum": ["workflow", "sequential", "parallel", "iterative"]
          }
        },
        "required": ["mode"],
        "oneOf": [
          { "$ref": "#/definitions/workflowProcess" },
          { "$ref": "#/definitions/sequentialProcess" },
          { "$ref": "#/definitions/parallelProcess" },
          { "$ref": "#/definitions/iterativeProcess" }
        ]
      },
      "workflowProcess": {
        "properties": {
          "mode": { "const": "workflow" },
          "entry_point": { "type": "string" },
          "nodes": {
            "type": "object",
            "patternProperties": {
              "^[a-zA-Z0-9_-]+$": {
                "type": "object",
                "properties": {
                  "action": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["action"]
              }
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "source": { "type": "string" },
                "target": { "type": "string" },
                "condition": { "type": "string" }
              },
              "required": ["source", "target"]
            }
          }
        },
        "required": ["entry_point", "nodes", "edges"]
      },
      "sequentialProcess": {
        "properties": {
          "mode": { "const": "sequential" },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "stage_name": { "type": "string" },
                "objective": { "type": "string" },
                "completion_criteria": { "type": "string" }
              },
              "required": ["stage_name", "objective", "completion_criteria"]
            }
          }
        },
        "required": ["steps"]
      },
      "parallelProcess": {
        "properties": {
          "mode": { "const": "parallel" },
          "lenses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "instruction": { "type": "string" }
              },
              "required": ["name", "instruction"]
            }
          }
        },
        "required": ["lenses"]
      },
      "iterativeProcess": {
        "properties": {
          "mode": { "const": "iterative" },
          "initialization": { "type": "string" },
          "iteration_step": { "type": "string" },
          "convergence_criteria": { "type": "string" }
        },
        "required": ["initialization", "iteration_step", "convergence_criteria"]
      },
      "telos": {
        "type": "object",
        "properties": {
          "analytical_purpose": {
            "type": "string",
            "enum": ["Descriptive", "Explanatory", "Predictive", "Interventionary"],
            "description": "The primary goal of the analysis, mapping to the 'Discourse Analysis Compass'."
          },
          "level_of_analysis": {
            "type": "string",
            "enum": ["Individual", "Community", "System", "Text-as-Object"],
            "description": "The primary scope of the analysis. 'Text-as-Object' is a special case for theories focused on the text's intrinsic properties."
          },
          "output_format": {
            "type": "object",
            "description": "A schema defining the structure of the final output."
          },
          "success_criteria": {
            "type": "string",
            "description": "Conditions that indicate successful application of the theory."
          }
        }
      }
    }
  }